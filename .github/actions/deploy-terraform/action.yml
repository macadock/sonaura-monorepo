name: 'Deploy terraform'
description: 'Deploy terraform'
inputs:
  BRANCH_NAME:
    description: 'Terraform workspace name'
    required: true
  CLOUDFLARE_API_TOKEN:
    description: 'Cloudflare API token'
    required: true
  CLOUDFLARE_ACCOUNT_ID:
    description: 'Cloudflare account ID'
    required: true
  WEBSITE_URL:
    description: 'Website URL'
    required: true
  ENVIRONMENT:
    description: 'Environment'
    required: true
  INFRA_DIR:
    description: 'Path to infra directory'
    required: false
    default: './packages/infra'


runs:
  using: "composite"
  steps:
    - name: Setup Terraform
      id: setup-terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      id: terraform-init
      run: terraform init
      shell: bash
      working-directory: ${{ inputs.INFRA_DIR }}

    - name: Terraform Workspace Select
      id: terraform-workspace-select
      shell: bash
      working-directory: ${{ inputs.INFRA_DIR }}
      run: terraform workspace select -or-create=true ${{ inputs.BRANCH_NAME }}

    - name: Terraform Format
      id: terraform-format
      run: terraform fmt -check
      shell: bash
      working-directory: ${{ inputs.INFRA_DIR }}

    - name: Build api
      id: build-api
      uses: ./.github/actions/build-api
      with:
        CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
        BRANCH_NAME: ${{ inputs.BRANCH_NAME }}

    - name: Update env variables
      id: update-env-variables
      shell: bash
      run: |
        echo "TF_VAR_WORKERS_SCRIPT_PATH=../../${{ steps.build-api.outputs.API_BUILD_PATH }}" >> $GITHUB_ENV

    - name: Terraform Plan
      id: terraform-plan
      run: terraform plan -input=false
      shell: bash
      working-directory: ${{ inputs.INFRA_DIR }}

    - name: Terraform Apply
      id: terraform-apply
      shell: bash
      working-directory: ${{ inputs.INFRA_DIR }}
      run: terraform apply -auto-approve -input=false

    - name: Deploy frontend
      id: deploy-frontend
      uses: ./.github/actions/build-frontend
      with:
        CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
        BRANCH_NAME: ${{ inputs.BRANCH_NAME }}
        WEBSITE_URL: ${{ inputs.WEBSITE_URL }}
        DISABLE_DOMAIN_INDEXING: ${{ inputs.ENVIRONMENT == 'production' && 'false' || 'true' }}