name: 'Update infra'

inputs:
  WORKSPACE_NAME:
    description: 'The name of the Terraform workspace'
    required: true
  API_URL:
    description: 'The API URL'
    required: true
  WEBSITE_URL:
    description: 'The website URL'
    required: true
  ENVIRONMENT:
    description: 'The environment'
    required: true
  CLOUDFLARE_API_TOKEN:
    description: 'The Cloudflare API token'
    required: true
  CLOUDFLARE_ZONE_ID:
    description: 'The Cloudflare zone ID'
    required: true
  CLOUDFLARE_ACCOUNT_ID:
    description: 'The Cloudflare account ID'
    required: true
  AWS_ACCESS_KEY_ID:
    description: 'The AWS access key ID'
    required: true
  AWS_SECRET_ACCESS_KEY:
    description: 'The AWS secret access key'
    required: true
  AWS_ENDPOINT_URL_S3:
    description: 'The AWS endpoint URL for S3'
    required: true

env:
  INFRA_DIR: './packages/infra'
  CLOUDFLARE_API_TOKEN: ${{ inputs.CLOUDFLARE_API_TOKEN }}
  CLOUDFLARE_ZONE_ID: ${{ inputs.CLOUDFLARE_ZONE_ID }}
  CLOUDFLARE_ACCOUNT_ID: ${{ inputs.CLOUDFLARE_ACCOUNT_ID }}
  AWS_ACCESS_KEY_ID: ${{ inputs.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ inputs.AWS_SECRET_ACCESS_KEY }}
  AWS_ENDPOINT_URL_S3: ${{ inputs.AWS_ENDPOINT_URL_S3 }}
  API_URL: ${{ inputs.API_URL }}
  WEBSITE_URL: ${{ inputs.WEBSITE_URL }}
  ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  WORKSPACE_NAME: ${{ inputs.WORKSPACE_NAME }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      id: checkout
      uses: actions/checkout@v4

    - name: Setup Terraform
      id: setup-terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Workspace Select
      id: terraform-workspace-select
      shell: bash
      working-directory: ${{ env.INFRA_DIR }}
      run: terraform workspace select -or-create ${{ env.WORKSPACE_NAME }}

    - name: Terraform Init
      id: terraform-init
      run: terraform init
      shell: bash
      working-directory: ${{ env.INFRA_DIR }}

    - name: Terraform Format
      id: terraform-format
      run: terraform fmt -check
      shell: bash
      working-directory: ${{ env.INFRA_DIR }}

    - name: Terraform Plan
      id: terraform-plan
      run: terraform plan -input=false
      shell: bash
      working-directory: ${{ env.INFRA_DIR }}

    - name: Terraform Apply
      id: terraform-apply
      shell: bash
      working-directory: ${{ env.INFRA_DIR }}
      run: terraform apply -auto-approve -input=false